<?php
/**
 * IsOpenNow
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  Hauki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Hauki API
 *
 * API for the City of Helsinki opening hours database  # Introduction  To do.  # Authentication methods  <SecurityDefinitions />
 *
 * The version of the OpenAPI document: 0.0.1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.2.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace Hauki\Model;

use \ArrayAccess;
use \Hauki\ObjectSerializer;

/**
 * IsOpenNow Class Doc Comment
 *
 * @category Class
 * @package  Hauki
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class IsOpenNow implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'IsOpenNow';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'is_open' => 'bool',
        'resource_timezone' => 'string',
        'resource_time_now' => '\DateTime',
        'matching_opening_hours' => '\Hauki\Model\TimeElement[]',
        'other_timezone' => 'string',
        'other_timezone_time_now' => '\DateTime',
        'matching_opening_hours_in_other_tz' => '\Hauki\Model\TimeElement[]',
        'resource' => '\Hauki\Model\Resource'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'is_open' => null,
        'resource_timezone' => null,
        'resource_time_now' => 'date-time',
        'matching_opening_hours' => null,
        'other_timezone' => null,
        'other_timezone_time_now' => 'date-time',
        'matching_opening_hours_in_other_tz' => null,
        'resource' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'is_open' => 'is_open',
        'resource_timezone' => 'resource_timezone',
        'resource_time_now' => 'resource_time_now',
        'matching_opening_hours' => 'matching_opening_hours',
        'other_timezone' => 'other_timezone',
        'other_timezone_time_now' => 'other_timezone_time_now',
        'matching_opening_hours_in_other_tz' => 'matching_opening_hours_in_other_tz',
        'resource' => 'resource'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'is_open' => 'setIsOpen',
        'resource_timezone' => 'setResourceTimezone',
        'resource_time_now' => 'setResourceTimeNow',
        'matching_opening_hours' => 'setMatchingOpeningHours',
        'other_timezone' => 'setOtherTimezone',
        'other_timezone_time_now' => 'setOtherTimezoneTimeNow',
        'matching_opening_hours_in_other_tz' => 'setMatchingOpeningHoursInOtherTz',
        'resource' => 'setResource'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'is_open' => 'getIsOpen',
        'resource_timezone' => 'getResourceTimezone',
        'resource_time_now' => 'getResourceTimeNow',
        'matching_opening_hours' => 'getMatchingOpeningHours',
        'other_timezone' => 'getOtherTimezone',
        'other_timezone_time_now' => 'getOtherTimezoneTimeNow',
        'matching_opening_hours_in_other_tz' => 'getMatchingOpeningHoursInOtherTz',
        'resource' => 'getResource'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['is_open'] = $data['is_open'] ?? null;
        $this->container['resource_timezone'] = $data['resource_timezone'] ?? null;
        $this->container['resource_time_now'] = $data['resource_time_now'] ?? null;
        $this->container['matching_opening_hours'] = $data['matching_opening_hours'] ?? null;
        $this->container['other_timezone'] = $data['other_timezone'] ?? null;
        $this->container['other_timezone_time_now'] = $data['other_timezone_time_now'] ?? null;
        $this->container['matching_opening_hours_in_other_tz'] = $data['matching_opening_hours_in_other_tz'] ?? null;
        $this->container['resource'] = $data['resource'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['is_open'] === null) {
            $invalidProperties[] = "'is_open' can't be null";
        }
        if ($this->container['resource_time_now'] === null) {
            $invalidProperties[] = "'resource_time_now' can't be null";
        }
        if ($this->container['matching_opening_hours'] === null) {
            $invalidProperties[] = "'matching_opening_hours' can't be null";
        }
        if ($this->container['resource'] === null) {
            $invalidProperties[] = "'resource' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets is_open
     *
     * @return bool
     */
    public function getIsOpen()
    {
        return $this->container['is_open'];
    }

    /**
     * Sets is_open
     *
     * @param bool $is_open is_open
     *
     * @return self
     */
    public function setIsOpen($is_open)
    {
        $this->container['is_open'] = $is_open;

        return $this;
    }

    /**
     * Gets resource_timezone
     *
     * @return string|null
     */
    public function getResourceTimezone()
    {
        return $this->container['resource_timezone'];
    }

    /**
     * Sets resource_timezone
     *
     * @param string|null $resource_timezone resource_timezone
     *
     * @return self
     */
    public function setResourceTimezone($resource_timezone)
    {
        $this->container['resource_timezone'] = $resource_timezone;

        return $this;
    }

    /**
     * Gets resource_time_now
     *
     * @return \DateTime
     */
    public function getResourceTimeNow()
    {
        return $this->container['resource_time_now'];
    }

    /**
     * Sets resource_time_now
     *
     * @param \DateTime $resource_time_now resource_time_now
     *
     * @return self
     */
    public function setResourceTimeNow($resource_time_now)
    {
        $this->container['resource_time_now'] = $resource_time_now;

        return $this;
    }

    /**
     * Gets matching_opening_hours
     *
     * @return \Hauki\Model\TimeElement[]
     */
    public function getMatchingOpeningHours()
    {
        return $this->container['matching_opening_hours'];
    }

    /**
     * Sets matching_opening_hours
     *
     * @param \Hauki\Model\TimeElement[] $matching_opening_hours matching_opening_hours
     *
     * @return self
     */
    public function setMatchingOpeningHours($matching_opening_hours)
    {
        $this->container['matching_opening_hours'] = $matching_opening_hours;

        return $this;
    }

    /**
     * Gets other_timezone
     *
     * @return string|null
     */
    public function getOtherTimezone()
    {
        return $this->container['other_timezone'];
    }

    /**
     * Sets other_timezone
     *
     * @param string|null $other_timezone other_timezone
     *
     * @return self
     */
    public function setOtherTimezone($other_timezone)
    {
        $this->container['other_timezone'] = $other_timezone;

        return $this;
    }

    /**
     * Gets other_timezone_time_now
     *
     * @return \DateTime|null
     */
    public function getOtherTimezoneTimeNow()
    {
        return $this->container['other_timezone_time_now'];
    }

    /**
     * Sets other_timezone_time_now
     *
     * @param \DateTime|null $other_timezone_time_now other_timezone_time_now
     *
     * @return self
     */
    public function setOtherTimezoneTimeNow($other_timezone_time_now)
    {
        $this->container['other_timezone_time_now'] = $other_timezone_time_now;

        return $this;
    }

    /**
     * Gets matching_opening_hours_in_other_tz
     *
     * @return \Hauki\Model\TimeElement[]|null
     */
    public function getMatchingOpeningHoursInOtherTz()
    {
        return $this->container['matching_opening_hours_in_other_tz'];
    }

    /**
     * Sets matching_opening_hours_in_other_tz
     *
     * @param \Hauki\Model\TimeElement[]|null $matching_opening_hours_in_other_tz matching_opening_hours_in_other_tz
     *
     * @return self
     */
    public function setMatchingOpeningHoursInOtherTz($matching_opening_hours_in_other_tz)
    {
        $this->container['matching_opening_hours_in_other_tz'] = $matching_opening_hours_in_other_tz;

        return $this;
    }

    /**
     * Gets resource
     *
     * @return \Hauki\Model\Resource
     */
    public function getResource()
    {
        return $this->container['resource'];
    }

    /**
     * Sets resource
     *
     * @param \Hauki\Model\Resource $resource resource
     *
     * @return self
     */
    public function setResource($resource)
    {
        $this->container['resource'] = $resource;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


